##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /mnt/data/webfiles;

	# Add index.php to the list if you are using PHP
	index index.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
       
        location ~* \.pdf$ {
		add_header Content-Disposition "attachment";
        }


location = /generate_204 { try_files /index.html =200; }
location = /library/test/success.html { try_files /index.html =200; }
location = /hotspot-detect.html { try_files /index.html =200; }
location = /captive.apple.com { try_files /index.html =200; }
location = /connecttest.txt { try_files /index.html =200; }
location = /check_network_status.txt { try_files /index.html =200; }
location = /canonical.html { try_files /index.html =200; }

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

    location ^~ /imgs/ {
        alias /mnt/data/webquiz/quizzes/imgs/;
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0, s-maxage=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        etag off;
    }

    location ^~ /webquiz/imgs/ {
        alias /mnt/data/webquiz/quizzes/imgs/;
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0, s-maxage=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        etag off;
    }
    
    location ^~ /webquiz/ {
        alias /mnt/data/webquiz/static/;
	index index.html;
	#try_files $uri =404;
	#try_files $uri $uri/ /webquiz/index.html;

        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0, s-maxage=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        etag off;
    }

    # --- НОВЕ: Проксі на локальний бекенд для API, адмінки та live-stats ---
    location ^~ /api/ {
        proxy_http_version 1.1;
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ^~ /admin/ {
        proxy_http_version 1.1;
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ^~ /live-stats/ {
        proxy_http_version 1.1;
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- НОВЕ: WebSocket-проксі на :8081 (/ws/...) ---
    location ^~ /ws/ {
        proxy_http_version 1.1;
        proxy_pass http://127.0.0.1:8081;

        # обов'язкові заголовки для WS
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # корисні заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # бажані таймаути для довгих WS-з'єднань
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
